name: Publish Workflow

on:
  push:
    branches:
      - devtask/*
    tag:
      - v* 
  workflow_dispatch:
    inputs:
      build_version:
        description:  Provide the branch/tag to build and test
        required: false
      release_version:
        description:  Provide the tag to publish the package
        required: false

jobs:
  build_test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.build_version != '' }}

    steps:
    
      - name: Check out code
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{  github.event.inputs.build_version }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies for Node
        run: npm install 2>&1 | tee npm-install.log

      - name: Upload npm install log to Artifactory
        if: success()
        run: |
          curl -u${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASSWORD }} \
            -T npm-install.log \
            "https://${{ secrets.JFROG_HOST_NAME }}/artifactory/${{ secrets.NPM_STAGING_ARTIFACTORY }}/logs/build_test/${{ github.event.inputs.build_version }}/npm-install.log"
           
      - name: Run tests
        run: npm test 2>&1 | tee npm-test.log

      - name: Upload npm test log to Artifactory
        if: success()
        run: |
          curl -u${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASSWORD }} \
            -T npm-test.log \
            "https://${{ secrets.JFROG_HOST_NAME }}/artifactory/${{ secrets.NPM_STAGING_ARTIFACTORY }}/logs/build_test/${{ github.event.inputs.build_version }}/npm-test.log"

  security-scan:
    runs-on: ubuntu-latest
    needs: build_test

    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.build_version != '' }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.event.inputs.build_version }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      
      - name: Install dependencies for Node
        run: npm install

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk test and save report
        run: |
          snyk test 2>&1 | tee snyk-report.log

      - name: Upload Snyk report to Artifactory
        if: success()
        run: |
          curl -u${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASSWORD }} \
            -T snyk-report.log \
            "https://${{ secrets.JFROG_HOST_NAME }}/artifactory/${{ secrets.NPM_STAGING_ARTIFACTORY }}/logs/security-scan/${{ github.event.inputs.build_version }}/snyk-report.log"


  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_version != '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{  github.event.inputs.release_version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Update package version
        run: |
            npm version ${{ github.event.inputs.release_version}} --no-git-tag-version

      - name: Read version and package
        run: |
           PACKAGE_FILENAME=$(npm pack --pack-destination ./)
           echo "PACKAGE_FILENAME=$PACKAGE_FILENAME" >> $GITHUB_ENV

      - name: Configure .npmrc for JFrog
        run: |
            echo "registry=https://${{ secrets.JFROG_HOST_NAME }}/artifactory/api/npm/${{ secrets.NPM_STAGING_ARTIFACTORY }}/" > ~/.npmrc
            echo "//${{ secrets.JFROG_HOST_NAME }}/artifactory/api/npm/${{ secrets.NPM_STAGING_ARTIFACTORY }}/:_authToken=${{ secrets.JFROG_PASSWORD }}" >> ~/.npmrc
            echo "always-auth=true" >> ~/.npmrc

      - name: Publish package to JFrog
        run: npm publish "$PACKAGE_FILENAME" 2>&1 | tee npm-publish.log
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JFROG_PASSWORD }}

      - name: Upload publish output to Artifactory
        if: success()
        run: |
          curl -u${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASSWORD }} \
            -T npm-publish.log \
            "https://${{ secrets.JFROG_HOST_NAME }}/artifactory/${{ secrets.NPM_STAGING_ARTIFACTORY }}/logs/publish/${{ github.event.inputs.release_version }}/npm-publish.log"

